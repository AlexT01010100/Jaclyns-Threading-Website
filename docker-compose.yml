services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: jaclyns-threading-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-jaclyns_threading}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jaclyns-threading-app
    restart: unless-stopped
    ports:
      - "${PORT:-3000}:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-jaclyns_threading}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      ADMIN_PHONE_NUMBER: ${ADMIN_PHONE_NUMBER}
      BASE_URL: ${BASE_URL:-http://localhost:3000}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    # Uncomment volumes below for development mode
    # volumes:
    #   - ./public:/app/public
    #   - ./server-sql.js:/app/server-sql.js

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
